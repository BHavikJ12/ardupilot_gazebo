// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file Status.h
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool microxrceddsgen.
 */

#ifndef _Status_H_
#define _Status_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdint.h>
#include <stdbool.h>
#include "std_msgs/msg/Header.h"

static const uint8_t ardupilot_msgs_msg_Status_APM_ROVER = 1;
static const uint8_t ardupilot_msgs_msg_Status_APM_ARDUCOPTER = 2;
static const uint8_t ardupilot_msgs_msg_Status_APM_ARDUPLANE = 3;
static const uint8_t ardupilot_msgs_msg_Status_APM_ANTENNATRACKER = 4;
static const uint8_t ardupilot_msgs_msg_Status_APM_UNKNOWN = 5;
static const uint8_t ardupilot_msgs_msg_Status_APM_REPLAY = 6;
static const uint8_t ardupilot_msgs_msg_Status_APM_ARDUSUB = 7;
static const uint8_t ardupilot_msgs_msg_Status_APM_IOFIRMWARE = 8;
static const uint8_t ardupilot_msgs_msg_Status_APM_AP_PERIPH = 9;
static const uint8_t ardupilot_msgs_msg_Status_APM_AP_DAL_STANDALONE = 10;
static const uint8_t ardupilot_msgs_msg_Status_APM_AP_BOOTLOADER = 11;
static const uint8_t ardupilot_msgs_msg_Status_APM_BLIMP = 12;
static const uint8_t ardupilot_msgs_msg_Status_APM_HELI = 13;
static const uint8_t ardupilot_msgs_msg_Status_FS_RADIO = 21;
static const uint8_t ardupilot_msgs_msg_Status_FS_BATTERY = 22;
static const uint8_t ardupilot_msgs_msg_Status_FS_GCS = 23;
static const uint8_t ardupilot_msgs_msg_Status_FS_EKF = 24;
typedef struct ardupilot_msgs_msg_Status
{
    std_msgs_msg_Header header;

    uint8_t vehicle_type;

    bool armed;

    uint8_t mode;

    bool flying;

    bool external_control;

    uint32_t failsafe_size;
    uint8_t failsafe[8];

} ardupilot_msgs_msg_Status;

struct ucdrBuffer;
bool ardupilot_msgs_msg_Status_serialize_topic(struct ucdrBuffer* writer, const ardupilot_msgs_msg_Status* topic);
bool ardupilot_msgs_msg_Status_deserialize_topic(struct ucdrBuffer* reader, ardupilot_msgs_msg_Status* topic);
uint32_t ardupilot_msgs_msg_Status_size_of_topic(const ardupilot_msgs_msg_Status* topic, uint32_t size);

#ifdef __cplusplus
}
#endif

#endif // _Status_H_
