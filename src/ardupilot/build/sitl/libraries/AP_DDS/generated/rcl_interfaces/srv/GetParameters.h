// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file GetParameters.h
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool microxrceddsgen.
 */

#ifndef _GetParameters_H_
#define _GetParameters_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdint.h>
#include <stdbool.h>
#include "rcl_interfaces/msg/ParameterValue.h"

typedef struct rcl_interfaces_srv_GetParameters_Request
{
    uint32_t names_size;
    char names[8][255];

} rcl_interfaces_srv_GetParameters_Request;

struct ucdrBuffer;
bool rcl_interfaces_srv_GetParameters_Request_serialize_topic(struct ucdrBuffer* writer, const rcl_interfaces_srv_GetParameters_Request* topic);
bool rcl_interfaces_srv_GetParameters_Request_deserialize_topic(struct ucdrBuffer* reader, rcl_interfaces_srv_GetParameters_Request* topic);
uint32_t rcl_interfaces_srv_GetParameters_Request_size_of_topic(const rcl_interfaces_srv_GetParameters_Request* topic, uint32_t size);
typedef struct rcl_interfaces_srv_GetParameters_Response
{
    uint32_t values_size;
    rcl_interfaces_msg_ParameterValue values[8];

} rcl_interfaces_srv_GetParameters_Response;

struct ucdrBuffer;
bool rcl_interfaces_srv_GetParameters_Response_serialize_topic(struct ucdrBuffer* writer, const rcl_interfaces_srv_GetParameters_Response* topic);
bool rcl_interfaces_srv_GetParameters_Response_deserialize_topic(struct ucdrBuffer* reader, rcl_interfaces_srv_GetParameters_Response* topic);
uint32_t rcl_interfaces_srv_GetParameters_Response_size_of_topic(const rcl_interfaces_srv_GetParameters_Response* topic, uint32_t size);

#ifdef __cplusplus
}
#endif

#endif // _GetParameters_H_
